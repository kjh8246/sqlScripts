DROP TABLE emp01;

CREATE TABLE emp01
as
SELECT  EMPLOYEE_ID , FIRST_NAME , JOB_ID 
FROM EMPLOYEES e 
WHERE 1=0;

SELECT * FROM EMP01 e2 ; 

--다음과 같은 사원 정보를 추가한다.
-- 1111 홍길동 인사
-- 2222 김길동 개발
-- 3333 최길동 인사
-- 4444 박길동 생산
INSERT INTO EMP01(EMPLOYEE_ID, FIRST_NAME, JOB_ID)
VALUES(1111, '홍길동', '인사');

INSERT INTO EMP01(EMPLOYEE_ID, FIRST_NAME, JOB_ID)
VALUES(2222,'김길동','개발');

INSERT INTO EMP01(EMPLOYEE_ID, FIRST_NAME, JOB_ID)
VALUES(3333,'최길동','인사');

INSERT INTO EMP01(EMPLOYEE_ID, FIRST_NAME, JOB_ID)
VALUES(4444,'박길동','생산');

SELECT * FROM EMP01 e ;

--컬럼 목록을 생략하는 경우
INSERT INTO EMP01
VALUES (5555,'황길동','개발');

SELECT * FROM EMP01 e ;

-- 컬럼 목록에 모든 컬럼이 있지 않을 경우 -> 오류?
INSERT INTO EMP01(EMPLOYEE_ID ,FIRST_NAME,JOB_ID) 
VALUES(6666,'이길동','null');
-- null을 명시적으로 저장 -> 오류
INSERT INTO HR.EMP01 (EMPLOYEE_ID, FIRST_NAME,JOB_ID)
VALUES(null,null,null);
SELECT * FROM EMP01 e ;

DROP TABLE emp02 ;

CREATE TABLE emp02
AS 
SELECT EMPLOYEE_ID , FIRST_NAME , JOB_ID 
FROM EMPLOYEES e2 
WHERE 1=0;

INSERT INTO EMP02 (EMPLOYEE_ID,FIRST_NAME,JOB_ID)
SELECT EMPLOYEE_ID , FIRST_NAME , JOB_ID FROM EMPLOYEES e ;

SELECT * FROM EMP02 e ;

INSERT INTO EMP02 
SELECT EMPLOYEE_ID , FIRST_NAME , JOB_ID FROM EMP01 e ;

SELECT * FROM EMP02 e ;

DROP TABLE emp03;
DROP TABLE emp04;

CREATE TABLE emp03
AS 
SELECT EMPLOYEE_ID ,FIRST_NAME ,JOB_ID FROM EMPLOYEES e WHERE 1=0;

CREATE TABLE emp04
AS 
SELECT EMPLOYEE_ID , FIRST_NAME , HIRE_DATE FROM EMPLOYEES e WHERE 1=0;

INSERT ALL
INTO EMP03 (EMPLOYEE_ID, FIRST_NAME, JOB_ID) VALUES (EMPLOYEE_ID, FIRST_NAME, JOB_ID)
INTO EMP04 (EMPLOYEE_ID, FIRST_NAME, HIRE_DATE) VALUES (EMPLOYEE_ID, FIRST_NAME, HIRE_DATE)
SELECT EMPLOYEE_ID ,FIRST_NAME , JOB_ID,HIRE_DATE FROM EMPLOYEES e ;

SELECT * FROM EMP03 e ;
SELECT * FROM EMP04 e ;

-- 사원번호 이름 급여를 저장할 수 있는 빈 테이블을 만들고 
-- 급여가 4000 이상인 사원들의 사원번호, 이름, 급여를 저장한다.
DROP TABLE emp05;

CREATE TABLE emp05
AS 
SELECT FIRST_NAME , SALARY FROM EMPLOYEES e2 WHERE 1=0; 

SELECT * FROM EMP05 e ;

INSERT INTO EMP05 (FIRST_NAME,SALARY)
SELECT FIRST_NAME , SALARY 
FROM EMPLOYEES e2 
WHERE SALARY >= 4000;

SELECT * FROM EMP05 e ;

--사원번호, 이름, 부서명을 저장할 수 있는 빈테이블을 만들고 
--dallas 지역에 근무하고 있는 사원들의 사원번호 , 이름 , 부서명을 저장한다.

























